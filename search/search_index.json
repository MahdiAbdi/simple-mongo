{"docs":[{"location":"/index.html","text":"","title":"simple-mongo"},{"location":"/index.html#simple-mongo","text":"A small library for easy usage of the mongo-scala-driver.\nImplement the DAO Pattern for easy database usage.\nEnhanced BSON conversion support.","title":"simple-mongo"},{"location":"/index.html#additional-documentation","text":"Documentation for mongo-scala-driver\nDocumentation for MongoDB","title":"Additional Documentation"},{"location":"/index.html#dependency-setup","text":"sbt libraryDependencies += \"com.sfxcode.nosql\" %% \"simple-mongo\" % \"1.1.0\" Maven <dependency>\n  <groupId>com.sfxcode.nosql</groupId>\n  <artifactId>simple-mongo_2.12</artifactId>\n  <version>1.1.0</version>\n</dependency> Gradle dependencies {\n  compile group: 'com.sfxcode.nosql', name: 'simple-mongo_2.12', version: '1.1.0'\n}","title":"Dependency Setup"},{"location":"/index.html#licence","text":"Apache 2","title":"Licence"},{"location":"/tutorial/setup.html","text":"","title":"Tutorial Part 1 - Setup"},{"location":"/tutorial/setup.html#tutorial-part-1-setup","text":"","title":"Tutorial Part 1 - Setup"},{"location":"/tutorial/setup.html#mongodb-demo-database","text":"","title":"MongoDB Demo Database"},{"location":"/tutorial/setup.html#setup","text":"Use Import from MongoDB Website:\nRestaurant Data Import","title":"Setup"},{"location":"/tutorial/setup.html#sample-document","text":"A sample document in the restaurants collection:\n{\n  \"address\": {\n     \"building\": \"1007\",\n     \"coord\": [ -73.856077, 40.848447 ],\n     \"street\": \"Morris Park Ave\",\n     \"zipcode\": \"10462\"\n  },\n  \"borough\": \"Bronx\",\n  \"cuisine\": \"Bakery\",\n  \"grades\": [\n     { \"date\": { \"$date\": 1393804800000 }, \"grade\": \"A\", \"score\": 2 },\n     { \"date\": { \"$date\": 1378857600000 }, \"grade\": \"A\", \"score\": 6 },\n     { \"date\": { \"$date\": 1358985600000 }, \"grade\": \"A\", \"score\": 10 },\n     { \"date\": { \"$date\": 1322006400000 }, \"grade\": \"A\", \"score\": 9 },\n     { \"date\": { \"$date\": 1299715200000 }, \"grade\": \"B\", \"score\": 14 }\n  ],\n  \"name\": \"Morris Park Bake Shop\",\n  \"restaurant_id\": \"30075445\"\n}","title":"Sample Document"},{"location":"/tutorial/setup.html#scala-case-classes-for-restaurant-document","text":"case class Address(street: String, building: String,\n  zipcode: String, coord: List[Double])\n\ncase class Grade(date: Date, grade: String, score: Int)\n\ncase class Restaurant(restaurant_id: String, name: String,\n  borough: String, cuisine: String,\n  grades: List[Grade], address: Address,\n  _id: ObjectId = new ObjectId())","title":"Scala case classes for Restaurant document"},{"location":"/tutorial/database.html","text":"","title":"Tutorial Part 2 - Database"},{"location":"/tutorial/database.html#tutorial-part-2-database","text":"","title":"Tutorial Part 2 - Database"},{"location":"/tutorial/database.html#info","text":"The database provides static import to our DAO objects.","title":"Info"},{"location":"/tutorial/database.html#imports","text":"import java.util.Date\n\nimport com.sfxcode.nosql.mongo.MongoDAO\nimport com.sfxcode.nosql.mongo.database.DatabaseProvider\nimport org.bson.codecs.configuration.CodecRegistries._\nimport org.mongodb.scala.bson.ObjectId\nimport org.mongodb.scala.bson.codecs.Macros._","title":"Imports"},{"location":"/tutorial/database.html#case-classes-for-document-representation","text":"case class Address(street: String, building: String,\n  zipcode: String, coord: List[Double])\n\ncase class Grade(date: Date, grade: String, score: Int)\n\ncase class Restaurant(restaurant_id: String, name: String,\n  borough: String, cuisine: String,\n  grades: List[Grade], address: Address,\n  _id: ObjectId = new ObjectId())","title":"case classes for document representation"},{"location":"/tutorial/database.html#registry-and-database","text":"scala-mongo-driver use a registry pattern for deserialization\nprivate val registry = fromProviders(\n  classOf[Restaurant],\n  classOf[Address], classOf[Grade])\n\nval database = DatabaseProvider(\"test\", registry)","title":"Registry and database"},{"location":"/tutorial/database.html#restaurant-dao","text":"object RestaurantDAO extends MongoDAO[Restaurant](database, \"restaurants\")","title":"Restaurant DAO"},{"location":"/tutorial/database.html#usage","text":"Create Database object\nobject RestaurantDatabase {\n\n// case classes ...\n\n// registry and database setup ...\n\nobject RestaurantDAO extends MongoDAO[Restaurant](database, \"restaurants\")\n\n// more DAO objects\n}\nStatic Import and Application\n// static import of needed DAO objects\n   import my.namespace.RestaurantDatabase._\n   \n   // ... some code","title":"Usage"},{"location":"/tutorial/application.html","text":"","title":"Tutorial Part 3 - Application"},{"location":"/tutorial/application.html#tutorial-part-3-application","text":"","title":"Tutorial Part 3 - Application"},{"location":"/tutorial/application.html#info","text":"This Demo Application should demonstrate the basic usage of simple-mongo.","title":"Info"},{"location":"/tutorial/application.html#imports","text":"// static import of needed DAO objects\nimport com.sfxcode.nosql.mongo.restaurant.RestaurantDatabase._\n\n// static import of mongo package object for needed implicits\nimport com.sfxcode.nosql.mongo._","title":"Imports"},{"location":"/tutorial/application.html#simple-application","text":"object RestaurantApp extends App {\n  // find specific restaurant key and value as Option Result\n  val restaurant = RestaurantDAO.find(\"name\", \"Dj Reynolds Pub And Restaurant\")\n\n  println(restaurant.get)\n\n  private val filter = Map(\"address.zipcode\" -> \"10075\", \"cuisine\" -> \"Italian\")\n  // find restaurants by filter - use implicit map to document conversion\n  // as List result\n  val restaurants: List[Restaurant] = RestaurantDAO.find(filter)\n\n  restaurants.sortBy(r => r.name).foreach(r => println(r.name))\n\n}","title":"Simple Application"},{"location":"/changes.html","text":"","title":"Version History"},{"location":"/changes.html#version-history","text":"","title":"Version History"},{"location":"/changes.html#current-version","text":"","title":"Current Version"},{"location":"/changes.html#history","text":"# Changes #\n\n## Versions\n\n### 1.0.5\n\n* update to Scala 2.12.5\n\n### 1.0.4\n\n* update to mongo scala driver 2.2.1\n\n### 1.0.3\n\n* gh-pages added\n* test fixes\n\n### 1.0.2\n\n* update to mongo scala driver 2.2.0\n\n### 1.0.1\n\n* BuildInfo added\n* dependencies updated\n* plugins updated\n* Index support addded","title":"History"}]}